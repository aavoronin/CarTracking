üî∂ ULTRALYTICS YOLOv5 MODELS
Model	Size	Parameters	Image Size	Speed (FPS)	Use Case
yolov5n	Nano	~1.9M	640√ó640	Very fast	Edge, mobile devices
yolov5s	Small	~7.2M	640√ó640	Fast	Real-time detection
yolov5m	Medium	~21.2M	640√ó640	Moderate	Better accuracy, desktop
yolov5l	Large	~46.5M	640√ó640	Slower	More accurate, more compute
yolov5x	XLarge	~87.7M	640√ó640	Slowest	Highest accuracy, needs GPU

üëâ All are trained by default on 640√ó640 input, but they support resizing (e.g. 320, 1280) for inference.

üî∂ ULTRALYTICS YOLOv8 MODELS
Model	Size	Params	Image Size	Speed	Notes
yolov8n	Nano	~3.2M	640√ó640	‚ö° Super fast	For edge/IoT/mobile devices
yolov8s	Small	~11.2M	640√ó640	‚ö° Fast	Lightweight desktop or Jetson
yolov8m	Medium	~25.9M	640√ó640	üöÄ Moderate	Good balance
yolov8l	Large	~43.7M	640√ó640	üê¢ Slower	Better accuracy
yolov8x	XLarge	~68.2M	640√ó640	üê¢üê¢ Slowest	Most accurate, GPU recommended

üëâ All models are compatible with 640√ó640, but can be used with larger sizes like 1280√ó1280 at cost of speed.

üî∂ YOLOv6 (by Meituan)
Model	Params	Image Size	Use Case
yolov6-n	~4.3M	640√ó640	Mobile / real-time
yolov6-s	~17M	640√ó640	Lightweight, fast
yolov6-m	~36.8M	640√ó640	Mid-size
yolov6-l	~51.5M	640√ó640	High accuracy, slower

üî∂ YOLOv7 FAMILY
Model	Params	Image Size	Notes
yolov7-tiny	~6M	416√ó416	Edge devices
yolov7	~36M	640√ó640	Standard version
yolov7x	~71M	640√ó640	Larger and more accurate
yolov7-w6	~70M+	1280√ó1280	For high-res input, slower
yolov7-e6	~97M+	1280√ó1280	Enhanced version
yolov7-d6	~130M+	1280√ó1280	Deep model, highest accuracy

üî∂ YOLOX FAMILY
Model	Params	Image Size	Notes
yolox-nano	~0.91M	416√ó416	Very light, IoT
yolox-tiny	~5.06M	416√ó416	Light + decent accuracy
yolox-s	~9M	640√ó640	Fast and good for real-time
yolox-m	~25M	640√ó640	Better accuracy, GPU needed
yolox-l	~54M	640√ó640	Accurate but slower
yolox-x	~99M	640√ó640	Best accuracy, most resources

üî∂ YOLO-NAS (by Deci.AI)
Model	Params	Image Size	Notes
yolo-nas-s	~4.5M	640√ó640	Small, real-time edge device
yolo-nas-m	~20M	640√ó640	Medium - best tradeoff
yolo-nas-l	~40M	640√ó640	Most accurate, slower

‚è± These are faster and more accurate than YOLOv8 according to Deci‚Äôs benchmarks.

üî∂ PP-YOLO FAMILY (Baidu PaddlePaddle)
Model	Params	Image Size	Notes
PP-YOLO	~50M	608√ó608	PaddlePaddle framework
PP-YOLOv2	~60M+	640√ó640	Enhanced with Deformable Convs
PP-YOLOE-s/l/x	Varied	640√ó640	Large models with high accuracy

üì∏ Image Sizes Summary:
Class	Common Sizes
Nano/Tiny	320√ó320, 416√ó416
Small	416√ó416, 640√ó640
Medium	640√ó640, 960√ó960
Large/X-Large	640√ó640, 1280√ó1280

üí° Note: Higher input sizes = better accuracy, but slower inference. Lower sizes = faster, but less accurate.

‚úÖ Choosing the Right Model
Need	Suggested Model
Fastest inference (mobile)	yolov8n, yolov5n, yolox-nano, yolo-nas-s
Balance of speed/accuracy	yolov8m, yolov5m, yolo-nas-m, yolox-m
Highest accuracy	yolov8x, yolov7x, yolo-nas-l, yolox-x
For segmentation/tracking	yolov8 family only (supports these natively)

Would you like a chart or table comparing FPS vs mAP for these models on real benchmarks (like COCO dataset)? I can prepare that too.